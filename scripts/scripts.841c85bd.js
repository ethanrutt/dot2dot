"use strict";angular.module("dot2dotApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/play",{templateUrl:"views/play.html",controller:"PlayCtrl",controllerAs:"play"}).otherwise({redirectTo:"/"})}]),angular.module("dot2dotApp").controller("MainCtrl",["$scope",function(a){a.startGame=function(){angular.element("#configModal").modal("show")}}]),angular.module("dot2dotApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("dot2dotApp").directive("configModal",function(){return{templateUrl:"views/configmodal.html",restrict:"E",controller:["$scope","$location",function(a,b){a.p1colors=["cadetblue","tomato","blueviolet"],a.p2colors=["limegreen","goldenrod","darkgray"],a.size=5,a.p1color=a.p1colors[0],a.p2color=a.p2colors[0],a.startGame=function(){console.log(a.size,a.p1color,a.p2color),angular.element("#configModal").modal("hide");var c={size:a.size,p1color:a.p1color,p2color:a.p2color};b.path("/play").search(c)}}]}}),angular.module("dot2dotApp").controller("PlayCtrl",["$scope","$routeParams",function(a,b){var c=b.size,d=b.p1color,e=b.p2color;(4>c||c>10)&&(console.error("Illegal size : "+c),c=4),(void 0===d||""===d)&&(console.error("Illegal color for player 1 : ["+d+"]"),d="cadetblue"),(void 0===e||""===e)&&(console.error("Illegal color for player 2 : ["+e+"]"),e="limegreen"),a.size=c,a.p1={color:d,score:0,turn:!0},a.p2={color:e,score:0,turn:!1}}]),angular.module("dot2dotApp").directive("gameboard",function(){return{template:'<svg id="gameboard" width="500" height="500"></svg>',restrict:"E",scope:!0,controller:["$scope","$timeout","$http",function(a,b,c){a.clearDotSelectable=function(){for(var b=0;b<a.size;b+=1)for(var c=0;c<a.size;c+=1)a.dots[b][c].data("isSelectable",!1).attr("fill","lightgray").attr("r",5)},a.findLine=function(b,c){for(var d=0;d<a.lines.length;d+=1){var e=a.lines[d],f=e.data("dots");if(-1!==f.indexOf(b)&&-1!==f.indexOf(c))return e}return null},a.addLine=function(b,c){var d=a.svgElement.line(b.attr("cx"),b.attr("cy"),c.attr("cx"),c.attr("cy"));a.svgLineGroup.add(d),d.attr({stroke:"black","stroke-width":4}),d.data("dots",[b,c]),a.lines.push(d),b.data("lineCount",b.data("lineCount")+1),c.data("lineCount",c.data("lineCount")+1);for(var e=0;e<a.squares.length;e+=1){var f=a.squares[e],g=f.dots;if(-1!==g.indexOf(b)&&-1!==g.indexOf(c)&&(f.lineCount+=1,4===f.lineCount)){console.log(f.lineCount);var h=g[2],i=a.svgElement.rect(h.attr("cx"),h.attr("cy"),a.gbspace,a.gbspace);a.svgRectGroup.add(i),a.p1.turn?(a.p1.score+=1,i.attr({fill:a.p1.color})):(a.p2.score+=1,i.attr({fill:a.p2.color}))}}return d},a.handleDotClick=function(){if(!this.data("isSelectable"))return void console.error("Dot is not selectable");if(a.clearDotSelectable(),0===a.playerClick){a.playerClick=this;var b=this.data("row"),c=this.data("col");if(this.attr("fill","red").attr("r",5),0!==b){var d=a.dots[b-1][c];null===a.findLine(this,d)&&d.attr("fill","green").attr("r",15).data("isSelectable",!0)}if(b!==a.size-1){var e=a.dots[b+1][c];null===a.findLine(this,e)&&e.attr("fill","green").attr("r",15).data("isSelectable",!0)}if(0!==c){var f=a.dots[b][c-1];null===a.findLine(this,f)&&f.attr("fill","green").attr("r",15).data("isSelectable",!0)}if(c!==a.size-1){var g=a.dots[b][c+1];null===a.findLine(this,g)&&g.attr("fill","green").attr("r",15).data("isSelectable",!0)}}else{var h=a.findLine(this,a.playerClick);null!==h&&console.error("Line is already visible : should not happen!"),h=a.addLine(this,a.playerClick),a.p1.turn=!a.p1.turn,a.p2.turn=!a.p2.turn,a.clearDotSelectable(),a.lines.forEach(function(a){a.data("dots").forEach(function(a){a.data("lineCount")<a.data("maxLines")&&a.attr("fill","green").attr("r",15).data("isSelectable",!0)})}),a.playerClick=0,a.$apply()}},a.initializeGameboard=function(){var b,c;a.playerClick=0;var d=500,e=d/a.size;a.gbspace=e;var f=e/2,g=15;a.dots=[],a.squares=[],a.svgElement=new Snap("#gameboard"),a.svgRectGroup=a.svgElement.group(),a.svgLineGroup=a.svgElement.group(),a.svgLineGroup.before(a.svgRectGroup),a.svgDotGroup=a.svgElement.group(),a.svgDotGroup.before(a.svgLineGroup);var h=a.svgElement;for(b=0;b<a.size;b+=1){var i=[];for(c=0;c<a.size;c+=1){var j=h.circle(c*e+f,b*e+f,g);if(j.data("row",b).data("col",c).data("isSelectable",!0).data("maxLines",4).data("lineCount",0).click(a.handleDotClick),(0===b||b===a.size-1||0===c||c===a.size-1)&&j.data("maxLines",3),i[c]=j,a.svgDotGroup.add(j),0!==b&&0!==c){var k={};k.dots=[],k.dots.push(j),k.dots.push(a.dots[b-1][c]),k.dots.push(a.dots[b-1][c-1]),k.dots.push(i[c-1]),k.lineCount=0,a.squares.push(k)}}a.dots.push(i)}a.dots[0][0].data("maxLines",2),a.dots[0][a.size-1].data("maxLines",2),a.dots[a.size-1][0].data("maxLines",2),a.dots[a.size-1][a.size-1].data("maxLines",2),a.lines=[]};var d=function(){c.pendingRequests.length>0?b(d):a.initializeGameboard()};b(d)}]}}),angular.module("dot2dotApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/configmodal.html",'<div class="modal fade" id="configModal" tabindex="-1" role="dialog" aria-labelledby="configModalLabel"> <div class="modal-dialog" role="document"> <div class="modal-content"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title" id="myModalLabel">Game Configuration</h4> </div> <div class="modal-body"> <form class="form-horizontal"> <div class="form-group"> <label for="size" class="col-sm-4 control-label">Size</label> <div class="col-sm-2"> <input type="number" class="form-control" id="size" min="4" max="10" ng-model="size"> </div> </div> <div class="form-group"> <label for="p1color" class="col-sm-4 control-label">Player 1 Color</label> <div class="col-sm-4"> <select class="form-control" id="p1color" ng-model="p1color"> <option ng-repeat="c in p1colors" value="{{c}}">{{c}}</option> </select> </div> </div> <div class="form-group"> <label for="p2color" class="col-sm-4 control-label">Player 2 Color</label> <div class="col-sm-4"> <select class="form-control" id="p2color" ng-model="p2color"> <option ng-repeat="c in p2colors" value="{{c}}">{{c}}</option> </select> </div> </div> </form> </div> <div class="modal-footer"> <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button> <button type="button" class="btn btn-primary" ng-click="startGame()">Start Game</button> </div> </div> </div> </div>'),a.put("views/main.html",'<div class="jumbotron"> <h1>Dot2Dot</h1> <p class="lead"> 2 player square matching game </p> <p><a class="btn btn-lg btn-success" ng-click="startGame()">Start Game</a></p> </div>'),a.put("views/play.html",'<div class="row"> <div class="col-sm-3"><label>Player 1:</label> <span class="badge">{{p1.score}}</span> <span class="glyphicon glyphicon-ok" ng-show="p1.turn"></span></div> <div class="col-sm-3 col-sm-offset-1"><label>Player 2:</label> <span class="badge">{{p2.score}}</span> <span class="glyphicon glyphicon-ok" ng-show="p2.turn"></span></div> </div> <gameboard></gameboard>')}]);